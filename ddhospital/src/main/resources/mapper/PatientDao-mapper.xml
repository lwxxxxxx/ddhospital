<?xml version="1.0" encoding="UTF-8"?>
<!-- dtd：document type definition 配置文件规范 -->
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- DAO接口中定义了方法，并没有定义DAO实现类
     DAO实现类：1.jdbc相关代码(Connection,Statement,Result)
               2.定义sql
               3.处理结果集
               4.关闭资源
      针对某个DAO接口做出相关配置,mybatis会基于如下配置，完成dao实现类的定制
 -->


<mapper namespace="com.dao.PatientDao">

    <!-- 登录-->
    <select id="login" resultType="Patient">
        select * from patient where id=#{id} and password=#{password}
    </select>

<!--添加患者信息-->
    <insert id="insertPatient">
        insert into patient(id, name, password,sex,age,lxfs,sfz) values (#{id}, #{name}, #{password},#{sex},#{age},#{lxfs},#{sfz})
    </insert>


<!-- 查询全部患者信息-->
    <select id="queryAllPatient" resultType="Patient">
        select * from patient
    </select>
    <update id="updatePatient">
        update patient set name=#{name},sex=#{sex} ,age=#{age} ,lxfs=#{lxfs},sfz=#{sfz}where id=#{id}
    </update>
    <!--通过编号查询教师信息-->
    <select id="queryPatientById" resultType="Patient">
        select * from patient where id=#{id}
    </select>
    <delete id="delPatient" >
        delete from patient where id=#{id}
    </delete>

    <!-- 修改密码-->
    <update id="updatePwd">
        update patient set password=#{newPwd} where id=#{username} and password=#{oldPwd}
    </update>

    <!-- 统计全部的患者的人数-->
    <select id="queryCount" resultType="com.vo.Vo">
SELECT
	ks.`name` NAME ,COUNT(doctor.`id`) count
FROM
	ks
LEFT JOIN
	doctor
ON
	ks.`id` = doctor.`kid`
GROUP BY
	ks.`id`
	    </select>


</mapper>